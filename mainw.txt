import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class MatrixOperations {

    // Функция для генерации случайных вещественных чисел в диапазоне [-50, 50]
    private static double randomDouble(double min, double max) {
        Random rand = new Random();
        return min + (max - min) * rand.nextDouble();
    }

    // Функция для вывода матрицы
    private static void printMatrix(List<List<Double>> matrix) {
        for (List<Double> row : matrix) {
            for (Double elem : row) {
                System.out.print(elem + " ");
            }
            System.out.println();
        }
    }

    // Функция для перезаписи чисел внутри каждой строки матрицы в обратном порядке
    private static void reverseRows(List<List<Double>> matrix) {
        for (List<Double> row : matrix) {
            Collections.reverse(row);
        }
    }

    // Функция для нахождения второго минимального и максимального элементов в матрице
    private static void findSecondMinMax(List<List<Double>> matrix, double[] secondMinMax) {
        double minVal = Double.MAX_VALUE;
        double maxVal = Double.MIN_VALUE;
        double secondMin = Double.MAX_VALUE;
        double secondMax = Double.MIN_VALUE;

        for (List<Double> row : matrix) {
            for (Double elem : row) {
                if (elem < minVal) {
                    secondMin = minVal;
                    minVal = elem;
                } else if (elem > minVal && elem < secondMin) {
                    secondMin = elem;
                }

                if (elem > maxVal) {
                    secondMax = maxVal;
                    maxVal = elem;
                } else if (elem < maxVal && elem > secondMax) {
                    secondMax = elem;
                }
            }
        }

        secondMinMax[0] = secondMin;
        secondMinMax[1] = secondMax;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int M = 0, N = 0; // Инициализация переменных
        boolean validInput = false;

        while (!validInput) {
            System.out.print("Введите размеры матрицы M и N: ");
            String input = scanner.nextLine();
            String[] tokens = input.split("\\s+");

            if (tokens.length != 2) {
                System.out.println("Некорректное количество слов. Пожалуйста, введите два целых числа.");
                continue;
            }

            try {
                M = Integer.parseInt(tokens[0]);
                N = Integer.parseInt(tokens[1]);

                if (M < 1 || M > 50 || N < 1 || N > 50) {
                    System.out.println("Недопустимые условия. Пожалуйста, введите числа в диапазоне [1, 50].");
                    continue;
                }

                if (M == 1 && N == 1) {
                    System.out.println("Некорректные числа. Пожалуйста, введите числа, не равные оба 1.");
                    continue;
                }

                validInput = true;
            } catch (NumberFormatException e) {
                System.out.println("Пожалуйста, введите два целых числа.");
            }
        }

        List<List<Double>> matrix = new ArrayList<>();

        // Инициализация матрицы случайными вещественными числами
        for (int i = 0; i < M; i++) {
            List<Double> row = new ArrayList<>();
            for (int j = 0; j < N; j++) {
                row.add(randomDouble(-50, 50));
            }
            matrix.add(row);
        }

        System.out.println("Исходная матрица:");
        printMatrix(matrix);

        // Перезапись чисел внутри каждой строки матрицы в обратном порядке
        reverseRows(matrix);

        System.out.println("Матрица после перезаписи чисел внутри каждой строки в обратном порядке:");
        printMatrix(matrix);

        // Нахождение второго минимального и максимального элементов
        double[] secondMinMax = new double[2];
        findSecondMinMax(matrix, secondMinMax);

        System.out.println("Второй минимальный элемент: " + secondMinMax[0]);
        System.out.println("Второй максимальный элемент: " + secondMinMax[1]);
    }
}

